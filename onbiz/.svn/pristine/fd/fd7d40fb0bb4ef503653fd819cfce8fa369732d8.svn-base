package onbiz.service;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import onbiz.dao.OnBoardDao;
import onbiz.vo.OnBoard;
import onbiz.vo.OnBoardFile;
import onbiz.vo.OnBoardSch;

@Service
public class OnBoardServ {
	
	@Autowired(required = false)
	private OnBoardDao dao;
	
	public ArrayList<OnBoard> bdList(OnBoardSch sch) {
		if(sch.getBd_name()==null) sch.setBd_name("");
		if(sch.getMem_no()==null) sch.setMem_no("");
		
		// 1. 총 건수 설정
		sch.setCount(dao.totCnt(sch));
		
		// 2. 페이지 크기 (요청) : default로 페이지 크기 지정 - 초기 화면
		if(sch.getPageSize() == 0) {
			sch.setPageSize(5);
		}
		
		// 3. 총 페이지 수
		sch.setPageCount((int)(Math.ceil(sch.getCount()/(double)sch.getPageSize())));
		
		// 4. 화면에서 클릭한 페이지 번호 (요청값) : 초기화면을 위한 default 설정
		if(sch.getCurPage() == 0) {
			sch.setCurPage(1);
		}
		
		// 현재 페이지는 총 페이지 수를 넘지 못한다.
		if(sch.getCurPage() > sch.getPageCount()) {
			sch.setCurPage(sch.getPageCount());
		}
		
		// 5. DB로 보낼 한 페이지에 보일 데이터 (시작번호/마지막번호 지정)
		sch.setStart((sch.getCurPage()-1) * sch.getPageSize()+1);
		sch.setEnd(sch.getCurPage()*sch.getPageSize());
		
		// 블럭 처리
		// 1. 블럭 크기 지정
		sch.setBlockSize(5);
		// 2. blocknum 지정 : 현재페이지번호/블럭의크기
		int blocknum = (int)( Math.ceil( sch.getCurPage()/(double)sch.getBlockSize() ) );
		// 3. 마지막 블럭번호
		int endBlock = blocknum*sch.getBlockSize();
		if(endBlock > sch.getPageCount()) {
			endBlock = sch.getPageCount();
		}
		sch.setEndBlock(endBlock);
		sch.setStartBlock((blocknum-1)*sch.getBlockSize()+1);		
		
		return dao.bdList(sch);
	}
	
	
	public void insBoard(OnBoard ins) {
		System.out.println("첨부파일 : " + ins.getReport().getOriginalFilename());
		dao.insBoard(ins);
		uploadFile(ins.getBd_no(), ins.getReport());
	}
	
	@Value("${upload}")
	private String upload;
	@Value("${tmpUpload}")
	private String tmpUpload;
	private void uploadFile(int bd_no, MultipartFile report) {
		String fileName = report.getOriginalFilename();
		if(fileName != null && !fileName.equals("")) {
			File tmpFile = new File(tmpUpload+fileName);
			File orgFile = new File(upload+fileName);
			try {
				report.transferTo(tmpFile);
				Files.copy(tmpFile.toPath(), orgFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
			} catch (IllegalStateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}	
		}
		dao.uploadFile(new OnBoardFile(fileName));
	}
	
	public OnBoard getBoard(int bd_no) {
		dao.uptViewCnt(bd_no); // 상세 조회 시, 조회수 카운팅
		OnBoard b = dao.getBoard(bd_no);
		b.setBd_fname(dao.getBdFile(bd_no));
		return b;
	}
	
	public void uptBoard(OnBoard upt) {
		dao.uptBoard(upt);
	}
	
	public void delBoard(int bd_no) {
		dao.delBoard(bd_no);
	}
	
}
