<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style>
/*  */

</style>
<script>
/*
1. Number, parseInt, parseFloat의 차이점을 기술하세요.
	숫자형 문자열을 숫자로 변환해주는 함수.
	1) Number : 숫자형으로 형변환, 문자 입력 불가
	2) parseInt(데이터, 진수) : 숫자 정수형으로 형변환, 문자 입력 가능
	3) parseFloat : 숫자 실수형으로 형변환, 문자 입력 가능	


2. 이름, 현재 몸무게, 현재 키를 단위와 함께 입력받고, 
    +10kg,+5cm를 더한 결과값을 이름과 함께 출력하세요

	var name = prompt("이름 입력","");
	var weight = prompt("몸무게 입력","0kg");
	var height = prompt("키 입력","0cm");
	console.log("이름:"+(name!='null')?name:'입력되지 않음');
	console.log("몸무게 : 입력 - "+weight+", +10kg:"+(parseFloat(weight)+10)+"kg");
	console.log(`키 : 입력  - ${height}, +5cm: ${parseFloat(height)+5}cm`);
	*/
/*
3. 국어, 영어, 수학 점수를 입력 후, 평균값을 처리하여, 점수에 따른 
    등급(A,B,C,D,E,F)의 출력하세요.(범위-0~100, 숫자형에 대한 예외를 처리하세요)
*/
	var korS = prompt("국어점수","0");
	var engS = prompt("영어점수","0");
	var mathS = prompt("수학점수","0");
	var kor = Number(korS);
	var eng = Number(engS);
	var math = Number(mathS);
	console.log("취소여부:"+korS);
	var avg = (kor + eng + math)/3;
	console.log("총점:"+avg+", isNaN:"+isNaN(avg));
	if(korS=='null'|| engS=='null' || mathS=='null'){
		console.log("과목 중, 취소가 클릭되었습니다.");	
	}else if( isNaN(avg) ){ // 숫자가 아닌 것 제외
		console.log("입력은 숫자형이어야 합니다.")
	}else if( avg >100 || avg < 0){
		console.log("범위는 0~100 입니다.")
	}else if(avg >= 90){
		console.log("A 등급 입니다")
	}else if(avg >= 80){
		console.log("B 등급 입니다")
	}else if(avg >= 70){
		console.log("C 등급 입니다")
	}else if(avg >= 60){
		console.log("D 등급 입니다")
	}else{
		console.log("F 등급 입니다")
	}
	
/*
4. switch case문의 기본 형식을 기술하세요.
	switch(데이터){
		case 데이터1: 처리할 프로세스 break;
		case 데이터2: 처리할 프로세스 break;
		case 데이터3: 처리할 프로세스 break;
		default: 위에 나열된 case가 아닐 때
	}
5. 엔티티타입과 엔티티의 차이와 관계를 기술하세요.
	엔티티타입은 업무에 필요하고 유용한 정보를 저장하고 관리하기 위한 것으로 영속적으로 존재하는 단위
		엔티티의 집합이라고 할 수 있다.
	엔티티는 엔티티타입에 속한 인스턴스의 하나에 해당한다. 실제 데이터 또는 레코드를 말한다.
	
	엔티티타입은 개체 또는 테이터베이스의 테이블입니다. 사람, 장소,물건, 사건 그리고 개념을 정의할 수 있는 것으로
	정보시스템을 구현할 때, 데이터베이스 테이블에 해당합니다.
	


 */
</script>

</head>
<body>

</body>
<script>

</script>
</html>