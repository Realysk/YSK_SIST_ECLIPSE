<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style>
/*  */

</style>
<script>
/*   
# 객체
1) 배열 내부에 있는 값을 요소라고 하며, 객체 내부에 있는 값을 속성이라고 한다.
	배열명[index-요소]
	객체명['속성']
2) 속성
	속성은 일반적으로 객체에 기본데이터형(실수,정수, 문자열, bool)값을 
	할당할 수 있는 것을 말한다.
	객체에 1개 이상의 속성과 속성값을 지정할 수 있다.
	var  객체={};
	객체.속성 = 속성값;
3) 메서드
	객체의 속성 중 함수 자료형인 속성을 특별히 메서드라고 부른다.
	var 객체 = {필드:값, 메서드:function(){ 메서드 수행내용 }}
	객체.메서드();
	this . : 메서드에서 현재 객체의 속성을 호출할 때, 접두어로 활용
4) 속성명 in 객체 
	해당 객체에서 속성이 맞는지 여부 bool값(true/false)으로 return
	ex) 
*/	var p01 = {name:'홍길동'};
	console.log('name' in p01);
/*	
	// name이라는 속성이 p01 객체에 소속되어 있는지
	// 여부를 boolean으로 가져오는 내용.
5)with 객체 
	해당 객체에 포함되어 있는 속성을 사용하는 block을 선언
	with( 객체 ){
	    속성1
	    속성2
	}
	ex) 
*/
	var prod = {name:"사과", price:3000, cnt:2}
	with(prod){
		console.log("물건명:"+name);
		console.log("가격:"+price);
		console.log("갯수:"+cnt);
	}
/*	
6) 속성/메서드 추가
	var 객체 = {}
	객체.속성1 = 데이터1
	객체.메서드1 = function(){   }
*/
	var airplane = {};
	airplane.target = "미국[뉴욕]";
	airplane.fly = function(){
		// this. :현재 객체가 가지고 있는 속성을 지칭.
		console.log(this.target+"으로 비행기를 타고 날아가다!!");
	}
	airplane.fly();
	
/*
7) 속성/메서드 제거
	delete( 객체.속성 ), delete(객체['속성'] )
	delete( 객체.메서드 ) , delete(객체['메서드'] )
 */
</script>

</head>
<body>

</body>
<script>
/* 


*/
</script>
</html>