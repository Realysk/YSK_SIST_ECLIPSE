# 다국어 처리..
	1. 화면에서 언어의 선택에 따라서, 자동으로 원하는 언어를 한 페이지에서 로딩 처리하는 것을 말한다.
		ex) 한국/영어/중국어/일본어/기타 현지언어
	
	2. 처리 프로세스
		1) 브라우저에서 GMT 시간(경도) 위치를 확인해서, 등록된 나라의 언어로 출력 처리
		2) 언어 선택으로 해당 나라의 언어로 출력 처리.
	
	3. 개발 순서(브라우저 언어 옵션 설정)
		1) 다국어 처리 파일 생성
			등록된 key=value 형식으로 code에 따른 언어가 등록된 파일을 생성한다.
		
		2) 다국어 처리 모듈을 container에 등록처리한다.
			class 등록하면서 key=value형식의 다국어 처리 파일을 값을 등록 처리한다.
		
		3) 테스트 할 화면을 controller 단에서 호출.
		
		4) 화면단(jsp)
			spring에서 지원하는 message 태그를 이용해서 다국어 처리 파일에 등록된 code값을 mapping 시킨다.
			ex) <spring:message code="chlang"/>
			다국어 파일로 설정된 key를 등록해 놓는다.
		
		5) 언어선택으로 해당 나라의 언어로 출력 처리를 만들어서 UI를 구성한다.
		
		6) 선택했을 때, 처리할 다국어와 매핑된 화면 code를 변경처리할 controller를 호출한다.
	
	4. 개발 순서 (언어 선택)	
		1) 다국어 파일 생성, container등록, 초기 화면구성
			ex) 컨테이너에 등록 내용
				다국어 처리 파일 선언 부분 등록
				LocaleResolver : 위치/시간 처리 옵션
		
		2) select 형태로 언어코드를 넘겨주게 처리. 
			ko, en
		
		3) 화면단 select옵션으로 언어 선택
			선택시, controller단 호출하여, 언어가 선택되게 처리.
		
		4) controller단
			LocaleResolver 객체에 의해서, 해당 내용을 선택하여 처리한다.
			new Locale(매개변수로 받은 언어를 문자열로 설정)
			LocaleResolver의 setLocale로 선택 하게 처리.
			이 후, 다시, 화면단 호출
			
# 다국어 처리 구조
	1. 파일로 처리
		1) 기준 파일 (영문)
		2) 언어1 파일 (영문)	msg_en.properties
		3) 언어2 파일 (한국어)
		4) 언어3 파일 (###)
		5) 언어4 파일 (###)
		...
		기준파일에 있는 key를 동일하게 하여 각 언어별로 처리한다.
		브라우저에 있는 언어
		
	2. 등록 처리 시스템을 만들어 DB로 처리 관리
			 
	
	
	
	
	
	
	
	