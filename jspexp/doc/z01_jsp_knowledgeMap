# JSP를 체계적으로 학습하려면
	
	1. JSP의 전체 큰 구성은 다음과 같다.
		웹 프로그래밍 기초
		JSP 기본
		필수 습득
		개발 효율 향상
		중급 코스
		서블릿 3.0과 MVC
	
	2. 웹 프로그래밍 기초
		1) 웹 환경 이해하기
			웹 서버, 웹 클라이언트
			URL : 프로토콜, IP, PORT 	(http://ip:port/프로젝트명/접근할JSP파일)
			웹 서버 : TOMCAT - HTML 페이지로 웹 화면을 지원하는 서버
			웹 어플리케이션 서버 (WAS) : 웹 서버에서 Application(JAVA)를 컴파일 시키고 실행해서 화면에 출력하는 서버
			웹 클라이언트 : 웹 서버에서 보내주는 HTML 페이지를 해석해서 화면을 구현하는 프로그램 - 브라우저
				- 처리 순서
				!! 웹 서버 구축 
				-> 클라이언트(브라우저) 서버의 주소 입력 
				-> 해당 주소의 서버에서는 호출하는 자원(JSP, HTML 등) 클라이언트로 전달 
					[WAS] JSP => JAVA => Class => JAVA + HTML(CSS,JS)을 혼합한 최종 HTML 코드를 만든다.
					## 주의! JAVA 코드와 JS는 실행하는 시점이 다르다. 서버에서 JAVA코드는 실행 하고, 최종 결과 HTML을 만들어서 Client(브라우저)에 전달한 후에 JS는 실행을 한다.
				-> 클라이언트는 해당 HTML 파일을 받아 해석 (랜더링)하고 JS / CSS르 처리하는 동적인 처리 
					전달되어 온 HTML을 받아서 랜더링 (h1 -> 문자를 크게 타이틀로 처리)
		2) JAVA와 웹 프로그래밍
		3) 웹 어플리케이션 개발 시작하기
		
	3. JSP 기본
		1) JSP로 시작하는 웹 프로그래밍
		2) JAVA 기초 문법 : 웹 프로그래밍에서 사용하는 JAVA
		
	4. 필수 습득
		1) 기본 객체와 영역
		2) 페이지 모듈화와 흐름 제어
		3) 에러 처리
		4) 클라이언트와 대화 1 (쿠키)
		5) 클라이언트와 대화 2 (세션)
		6) JSP : useBean 액션 태그 활용
		7) DATABASE 처리
		8) 기타 실무 예제 구현
		
	5. 개발효율 향상
	
	6. 중급 코스
		1) 표현 언어 (EL) : ${변수명}
		2) 표준 태그 라이브러리 (JSTL)
		3) EL / JSTL을 활용한 예제
		
	7. 서블릿 3.0과 MVC
		1) 서블릿이란?
		2) MVC 개발 패턴
		3) 필터
		4) 웹 어플리케이션 이벤트 처리	